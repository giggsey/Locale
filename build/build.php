<?php
/**
 * @author giggsey
 */

/*
 * @todo Move to argv
 */

$inputDir = __DIR__.'/../cldr-localenames-full/main/';
$outputDir = __DIR__.'/../data/';


/*
 * Ignored Locales + Regions
 */

$ignoredLocales = [
    'en-US-POSIX',
    'en-001',
    'en-150',
    'es-419',
];

$ignoredRegions = [
    'ZZ', // Unknown region
];

/*
 * Check directories
 */

if (!is_dir($inputDir)) {
    throw new InvalidArgumentException(sprintf('Unable to find input directory: %s', $inputDir));
}

if (!is_dir($outputDir)) {
    // Try to create output directory
    if (mkdir($outputDir) === false) {
        throw new RuntimeException(sprintf('Unable to create output directory: %s', $outputDir));
    }
}

/*
 * Load all locales from the source directory
 */

$localeList = [];

foreach (scandir($inputDir) as $item) {
    if (substr($item, 0, 1) !== '.' && is_dir($inputDir.$item)) {
        if (in_array($item, $ignoredLocales)) {
            // Skip over any ignored locales
            continue;
        }

        $localeList[] = $item;
    }
}


/*
 * Loop through all locales, and load the territory list
 */

$countries = [];

foreach ($localeList as $locale) {
    $data = json_decode(file_get_contents($inputDir.$locale.'/territories.json'), true);
    $territoryList = $data['main'][$locale]['localeDisplayNames']['territories'];

    $countries[$locale] = [];

    foreach ($territoryList as $territory => $name) {
        if (is_numeric($territory)) {
            // Ignore numeric values (continents, and other special regions)
            continue;
        }

        if (stripos($territory, '-alt-') !== false) {
            // Ignore alternative names
            continue;
        }

        if (in_array($territory, $ignoredRegions)) {
            // Ignore certain regions
            continue;
        }

        $countries[$locale][$territory] = $name;
    }
}

/*
 * @todo Additional processing to go here
 *  - Remove duplicate records when we can inherit (e.g. en_GB might not have differences from en)
 */

/*
 * Write each territory file
 */

$writtenCountries = [];

foreach ($countries as $locale => $country) {
    if (count($country) == 0) {
        // Skip empty countries
        continue;
    }

    $countryArray = var_export($country, true);

    $fileContents = <<<php
<?php

/**
 * Generated by build/build.php
 *
 * Do not use this file directory
 */

return $countryArray;

php;

    file_put_contents($outputDir.$locale.'.php', $fileContents);

    $writtenCountries[$locale] = '';
}

/*
 * Save locale list
 */

$localeList = var_export($writtenCountries, true);

$fileContents = <<<php
<?php

/**
 * Generated by build/build.php
 *
 * Do not use this file directory
 */

return $localeList;

php;


file_put_contents($outputDir.'_list.php', $fileContents);
